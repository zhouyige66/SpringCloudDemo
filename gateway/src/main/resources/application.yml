server:
  port: ${server.port.gateway:8080}

spring:
  application:
    name: ${server.name.gateway:gateway}
  #链路追踪
  zipkin:
    baseUrl: ${zipkin.url:http://localhost:9411}
  sleuth:
    traceId128: true
    sampler:
      probability: 1.0
  #es
  data:
    elasticsearch:
      cluster-name: elasticsearch_zzy
      cluster-nodes: 127.0.0.1:9300
      repositories:
        enabled: true
  elasticsearch:
    rest:
      uris: ["127.0.0.1:9200"]
  #redis
  redis:
    host: 127.0.0.1
    port: 6379
  cache:
    ehcache:
      config: classpath:ehcache.xml
    type: redis
  session:
    store-type: redis

#路由配置
zuul:
  retryable: true
  routes:
    api:
      path: /api/**
      serviceId: ${server.name.api}
    api2:
      path: /api2/**
      serviceId: ${server.name.api2}
#    auth:
#      path: /auth/**
#      serviceId: ${spring.application.name}

ribbon:
  #连接超时时间(ms)
  ConnectTimeout: 250
  #通信超时时间(ms)，解决504问题
  ReadTimeout: 10000
  #是否对所有操作重试
  OkToRetryOnAllOperations: true
  #同一服务不同实例的重试次数
  MaxAutoRetriesNextServer: 2
  #同一实例的重试次数
  MaxAutoRetries: 1

hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            #熔断超时时长：10000ms
            timeoutInMilliseconds: 10000

#redis
redis:
  #redis机器ip
  hostname: 127.0.0.1
  #redis端口
  port: 6379
  #redis密码
  password:
  #redis超时时间（毫秒），如果不设置，取默认值2000
  timeout: 10000
  #最大空闲数
  maxIdle: 300
  #连接池的最大数据库连接数。设为0表示无限制,如果是jedis 2.4以后用redis.maxTotal
  #maxActive=600
  #控制一个pool可分配多少个jedis实例,用来替换上面的redis.maxActive,如果是jedis 2.4以后用该属性
  maxTotal: 1000
  #最大建立连接等待时间。如果超过此时间将接到异常。设为-1表示无限制。
  maxWaitMillis: 1000
  #连接的最小空闲时间 默认1800000毫秒(30分钟)
  minEvictableIdleTimeMillis: 300000
  #每次释放连接的最大数目,默认3
  numTestsPerEvictionRun: 1024
  #逐出扫描的时间间隔(毫秒) 如果为负数,则不运行逐出线程, 默认-1
  timeBetweenEvictionRunsMillis: 30000
  #是否在从池中取出连接前进行检验,如果检验失败,则从池中去除连接并尝试取出另一个
  testOnBorrow: true
  #在空闲时检查有效性, 默认false
  testWhileIdle: true
  #redis集群配置
  #spring.cluster.nodes=192.168.1.1:7001,192.168.1.1:7002,192.168.1.1:7003,192.168.1.1:7004,192.168.1.1:7005,192.168.1.1:7006
  #spring.cluster.max-redirects=3
  #哨兵模式
  #sentinel.host1=192.168.1.1
  #sentinel.port1=26379
#sentinel.host2=192.168.1.2
#sentinel.port2=26379

#内置Endpoints
#id	desc	Sensitive
#auditevents	显示当前应用程序的审计事件信息	Yes
#beans	显示应用Spring Beans的完整列表	Yes
#caches	显示可用缓存信息	Yes
#conditions	显示自动装配类的状态及及应用信息	Yes
#configprops	显示所有 @ConfigurationProperties 列表	Yes
#env	显示 ConfigurableEnvironment 中的属性	Yes
#flyway	显示 Flyway 数据库迁移信息	Yes
#health	显示应用的健康信息（未认证只显示status，认证显示全部信息详情）	No
#info	显示任意的应用信息（在资源文件写info.xxx即可）	No
#liquibase	展示Liquibase 数据库迁移	Yes
#metrics	展示当前应用的 metrics 信息	Yes
#mappings	显示所有 @RequestMapping 路径集列表	Yes
#scheduledtasks	显示应用程序中的计划任务	Yes
#sessions	允许从Spring会话支持的会话存储中检索和删除用户会话。	Yes
#shutdown	允许应用以优雅的方式关闭（默认情况下不启用）	Yes
#threaddump	执行一个线程dump	Yes
#httptrace	显示HTTP跟踪信息（默认显示最后100个HTTP请求 - 响应交换）	Yes
management:
  #定义管理端点可用地址与端口
  server:
    port: 8081
    address: 127.0.0.1
  endpoints:
    web:
      exposure:
        #对外开放端口
        include: info,health,monitoring
        #关闭端口
        exclude: sessions

javamelody:
  # Enable JavaMelody auto-configuration (optional, default: true)
  enabled: true
  # Data source names to exclude from monitoring (optional, comma-separated)
  excluded-datasources: secretSource,topSecretSource
  # Enable monitoring of Spring services and controllers (optional, default: true)
  spring-monitoring-enabled: true
  # Initialization parameters for JavaMelody (optional)
  # See: https://github.com/javamelody/javamelody/wiki/UserGuide#6-optional-parameters
  init-parameters:
    # log http requests:
    log: true
    # to exclude images, css, fonts and js urls from the monitoring:
    #url-exclude-pattern: (/webjars/.*|/css/.*|/images/.*|/fonts/.*|/js/.*)
    # to aggregate digits in http requests:
    #http-transform-pattern: \d+
    # to add basic auth:
    #authorized-users: admin:pwd
    # to change the default storage directory:
    #storage-directory: /tmp/javamelody
    # to change the default "/monitoring" path:
    #monitoring-path: /admin/performance