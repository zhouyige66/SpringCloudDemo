server:
  port: 8761

#注册中心
eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8760/eureka/

spring:
  application:
    name: ${services.name.gateway:zuul_gateway}
  #链路追踪
  zipkin:
    baseUrl: http://localhost:9411
  #日志追踪
  sleuth:
    traceId128: true
    sampler:
      probability: 1.0
  #es
  data:
    elasticsearch:
      cluster-name: elasticsearch_zzy
      cluster-nodes: 127.0.0.1:9300
      repositories:
        enabled: true
  elasticsearch:
    rest:
      uris: ["127.0.0.1:9200"]
  #redis
  redis:
    host: 127.0.0.1
    port: 6379
  cache:
    ehcache:
      config: classpath:ehcache.xml
    type: redis
  session:
    store-type: redis

#路由配置
zuul:
  routes:
    api:
      path: /api/**
      serviceId: api
    api2:
      path: /api2/**
      serviceId: api2
#    auth:
#      path: /auth/**
#      serviceId: ${spring.application.name}
  retryable: true

ribbon:
  #连接超时时间(ms)
  ConnectTimeout: 250
  #通信超时时间(ms)，解决504问题
  ReadTimeout: 10000
  #是否对所有操作重试
  OkToRetryOnAllOperations: true
  #同一服务不同实例的重试次数
  MaxAutoRetriesNextServer: 2
  #同一实例的重试次数
  MaxAutoRetries: 1

hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            #熔断超时时长：10000ms
            timeoutInMilliseconds: 10000

#redis
redis:
  #redis机器ip
  hostname: 127.0.0.1
  #redis端口
  port: 6379
  #redis密码
  password:
  #redis超时时间（毫秒），如果不设置，取默认值2000
  timeout: 10000
  #最大空闲数
  maxIdle: 300
  #连接池的最大数据库连接数。设为0表示无限制,如果是jedis 2.4以后用redis.maxTotal
  #maxActive=600
  #控制一个pool可分配多少个jedis实例,用来替换上面的redis.maxActive,如果是jedis 2.4以后用该属性
  maxTotal: 1000
  #最大建立连接等待时间。如果超过此时间将接到异常。设为-1表示无限制。
  maxWaitMillis: 1000
  #连接的最小空闲时间 默认1800000毫秒(30分钟)
  minEvictableIdleTimeMillis: 300000
  #每次释放连接的最大数目,默认3
  numTestsPerEvictionRun: 1024
  #逐出扫描的时间间隔(毫秒) 如果为负数,则不运行逐出线程, 默认-1
  timeBetweenEvictionRunsMillis: 30000
  #是否在从池中取出连接前进行检验,如果检验失败,则从池中去除连接并尝试取出另一个
  testOnBorrow: true
  #在空闲时检查有效性, 默认false
  testWhileIdle: true
  #redis集群配置
  #spring.cluster.nodes=192.168.1.1:7001,192.168.1.1:7002,192.168.1.1:7003,192.168.1.1:7004,192.168.1.1:7005,192.168.1.1:7006
  #spring.cluster.max-redirects=3
  #哨兵模式
  #sentinel.host1=192.168.1.1
  #sentinel.port1=26379
#sentinel.host2=192.168.1.2
#sentinel.port2=26379