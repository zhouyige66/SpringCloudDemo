<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>demo</artifactId>
        <groupId>cn.roy.springcloud</groupId>
        <version>${parent-release-version}</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>java-agent-demo</artifactId>

    <dependencies>
        <dependency>
            <groupId>org.javassist</groupId>
            <artifactId>javassist</artifactId>
            <version>3.26.0-GA</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.2.0</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                        </manifest>
                        <!--使用 javaagent 需要几个步骤：-->
                        <!--1.定义一个 MANIFEST.MF 文件，必须包含 Premain-Class 选项，通常也会加入Can-Redefine-Classes 和 Can-Retransform-Classes 选项。-->
                        <!--2.创建一个Premain-Class 指定的类，类中包含 premain 方法，方法逻辑由用户自己确定。-->
                        <!--3.将 premain 的类和 MANIFEST.MF 文件打成 jar 包。-->
                        <!--4.使用参数 -javaagent: jar包路径 启动要代理的方法。-->
                        <manifestEntries>
                            <!--Premain-Class ：包含 premain 方法的类（类的全路径名）-->
                            <!--Agent-Class ：包含 agentmain 方法的类（类的全路径名）-->
                            <!--Boot-Class-Path ：设置引导类加载器搜索的路径列表。查找类的特定于平台的机制失败后，引导类加载器会搜索这些路径。按列出的顺序搜索路径。列表中的路径由一个或多个空格分开。路径使用分层 URI 的路径组件语法。如果该路径以斜杠字符（“/”）开头，则为绝对路径，否则为相对路径。相对路径根据代理 JAR 文件的绝对路径解析。忽略格式不正确的路径和不存在的路径。如果代理是在 VM 启动之后某一时刻启动的，则忽略不表示 JAR 文件的路径。（可选）-->
                            <!--Can-Redefine-Classes ：true表示能重定义此代理所需的类，默认值为 false（可选）-->
                            <!--Can-Retransform-Classes ：true 表示能重转换此代理所需的类，默认值为 false （可选）-->
                            <!--Can-Set-Native-Method-Prefix： true表示能设置此代理所需的本机方法前缀，默认值为 false（可选）-->
                            <Premain-Class>cn.kk20.Agent</Premain-Class>
                            <Boot-Class-Path></Boot-Class-Path>
                            <Can-Redefine-Classes>true</Can-Redefine-Classes>
                            <Can-Retransform-Classes>true</Can-Retransform-Classes>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>