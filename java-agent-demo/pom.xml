<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>java-demo</groupId>
    <artifactId>java-agent-demo</artifactId>
    <version>0.0.1</version>

    <dependencies>
        <dependency>
            <groupId>org.javassist</groupId>
            <artifactId>javassist</artifactId>
            <version>3.25.0-GA</version>
        </dependency>
        <dependency>
            <groupId>com.sun</groupId>
            <artifactId>tools</artifactId>
            <version>1.8.0</version>
            <scope>system</scope>
            <systemPath>/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/lib/tools.jar</systemPath>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!--第一种打包方式-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.2.0</version>
                <configuration>
                    <archive>
                        <manifest>
                            <!--程序入口-->
                            <mainClass>cn.roy.agent.HotfixMain</mainClass>
                            <!--是否添加依赖的jar路径配置-->
                            <addClasspath>true</addClasspath>
                            <!--依赖的jar包存放位置，和生成的jar放在同一级目录下-->
                            <classpathPrefix>lib/</classpathPrefix>
                        </manifest>
                        <manifestEntries>
                            <!--Premain-Class：包含 premain 方法的类（类的全路径名）-->
                            <!--Agent-Class：包含 agentmain 方法的类（类的全路径名）-->
                            <!--Boot-Class-Path：设置引导类加载器搜索的路径列表。查找类的特定于平台的机制失败后，引导类加载器会搜索这些
                            路径。按列出的顺序搜索路径。列表中的路径由一个或多个空格分开。路径使用分层 URI 的路径组件语法。如果该路径以斜杠
                            字符（“/”）开头，则为绝对路径，否则为相对路径。相对路径根据代理 JAR 文件的绝对路径解析。忽略格式不正确的路径和
                            不存在的路径。如果代理是在 VM 启动之后某一时刻启动的，则忽略不表示 JAR 文件的路径。（可选）-->
                            <!--Can-Redefine-Classes：true表示能重定义此代理所需的类，默认值为 false（可选）-->
                            <!--Can-Retransform-Classes：true 表示能重转换此代理所需的类，默认值为 false （可选）-->
                            <!--Can-Set-Native-Method-Prefix： true表示能设置此代理所需的本机方法前缀，默认值为 false（可选）-->
                            <Premain-Class>cn.roy.agent.Agent</Premain-Class>
                            <Agent-Class>cn.roy.agent.Agent</Agent-Class>
                            <Can-Redefine-Classes>true</Can-Redefine-Classes>
                            <Can-Retransform-Classes>true</Can-Retransform-Classes>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>

            <!--第二种打包方式-->
            <!--            <plugin>-->
            <!--                <groupId>org.apache.maven.plugins</groupId>-->
            <!--                <artifactId>maven-assembly-plugin</artifactId>-->
            <!--                <version>3.1.0</version>-->
            <!--                <configuration>-->
            <!--                    <finalName>java-agent-demo</finalName>-->
            <!--                    <descriptors>-->
            <!--                        <descriptor>./src/assembly/assembly.xml</descriptor>-->
            <!--                    </descriptors>-->
            <!--                    <descriptorRefs>-->
            <!--                        <descriptorRef>jar-with-dependencies</descriptorRef>-->
            <!--                    </descriptorRefs>-->
            <!--                    <archive>-->
            <!--                        <addMavenDescriptor>true</addMavenDescriptor>-->
            <!--                        <manifest>-->
            <!--                            <addClasspath>true</addClasspath>-->
            <!--                            <classpathPrefix>lib/</classpathPrefix>-->
            <!--                            <mainClass>cn.roy.agent.HotfixMain</mainClass>-->
            <!--                        </manifest>-->
            <!--                        <manifestEntries>-->
            <!--                            <Premain-Class>cn.roy.agent.Agent</Premain-Class>-->
            <!--                            <Agent-Class>cn.roy.agent.Agent</Agent-Class>-->
            <!--                            <Can-Redefine-Classes>true</Can-Redefine-Classes>-->
            <!--                            <Can-Retransform-Classes>true</Can-Retransform-Classes>-->
            <!--                        </manifestEntries>-->
            <!--                    </archive>-->
            <!--                </configuration>-->
            <!--                <executions>-->
            <!--                    &lt;!&ndash;配置执行器&ndash;&gt;-->
            <!--                    <execution>-->
            <!--                        <id>make-assembly</id>-->
            <!--                        <phase>package</phase>-->
            <!--                        <goals>-->
            <!--                            <goal>single</goal>-->
            <!--                        </goals>-->
            <!--                    </execution>-->
            <!--                </executions>-->
            <!--            </plugin>-->
        </plugins>
    </build>
</project>
