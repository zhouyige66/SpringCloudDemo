<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.roy.springcloud.api.dao.mapper.ApiModelMapper">
  <resultMap id="BaseResultMap" type="cn.roy.springcloud.api.dao.model.ApiModel">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="controller" jdbcType="VARCHAR" property="controller" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="route" jdbcType="VARCHAR" property="route" />
    <result column="method" jdbcType="VARCHAR" property="method" />
    <result column="parameter_ids" jdbcType="VARCHAR" property="parameterIds" />
    <result column="body" jdbcType="BIGINT" property="body" />
    <result column="del" jdbcType="BIT" property="del" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Model_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Model_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, controller, description, route, method, parameter_ids, body, del, create_time, 
    update_time
  </sql>
  <select id="selectByQuery" parameterType="cn.roy.springcloud.api.dao.model.ApiModelQuery" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from api
    <if test="_parameter != null">
      <include refid="Model_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from api
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from api
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByQuery" parameterType="cn.roy.springcloud.api.dao.model.ApiModelQuery">
    delete from api
    <if test="_parameter != null">
      <include refid="Model_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.roy.springcloud.api.dao.model.ApiModel">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into api (name, controller, description, 
      route, method, parameter_ids, 
      body, del, create_time, 
      update_time)
    values (#{name,jdbcType=VARCHAR}, #{controller,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{route,jdbcType=VARCHAR}, #{method,jdbcType=VARCHAR}, #{parameterIds,jdbcType=VARCHAR}, 
      #{body,jdbcType=BIGINT}, #{del,jdbcType=BIT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.roy.springcloud.api.dao.model.ApiModel">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into api
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        name,
      </if>
      <if test="controller != null">
        controller,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="route != null">
        route,
      </if>
      <if test="method != null">
        method,
      </if>
      <if test="parameterIds != null">
        parameter_ids,
      </if>
      <if test="body != null">
        body,
      </if>
      <if test="del != null">
        del,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="controller != null">
        #{controller,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="route != null">
        #{route,jdbcType=VARCHAR},
      </if>
      <if test="method != null">
        #{method,jdbcType=VARCHAR},
      </if>
      <if test="parameterIds != null">
        #{parameterIds,jdbcType=VARCHAR},
      </if>
      <if test="body != null">
        #{body,jdbcType=BIGINT},
      </if>
      <if test="del != null">
        #{del,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByQuery" parameterType="cn.roy.springcloud.api.dao.model.ApiModelQuery" resultType="java.lang.Long">
    select count(*) from api
    <if test="_parameter != null">
      <include refid="Model_Where_Clause" />
    </if>
  </select>
  <update id="updateByQuerySelective" parameterType="map">
    update api
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.controller != null">
        controller = #{record.controller,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.route != null">
        route = #{record.route,jdbcType=VARCHAR},
      </if>
      <if test="record.method != null">
        method = #{record.method,jdbcType=VARCHAR},
      </if>
      <if test="record.parameterIds != null">
        parameter_ids = #{record.parameterIds,jdbcType=VARCHAR},
      </if>
      <if test="record.body != null">
        body = #{record.body,jdbcType=BIGINT},
      </if>
      <if test="record.del != null">
        del = #{record.del,jdbcType=BIT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Model_Where_Clause" />
    </if>
  </update>
  <update id="updateByQuery" parameterType="map">
    update api
    set id = #{record.id,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      controller = #{record.controller,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      route = #{record.route,jdbcType=VARCHAR},
      method = #{record.method,jdbcType=VARCHAR},
      parameter_ids = #{record.parameterIds,jdbcType=VARCHAR},
      body = #{record.body,jdbcType=BIGINT},
      del = #{record.del,jdbcType=BIT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Model_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.roy.springcloud.api.dao.model.ApiModel">
    update api
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="controller != null">
        controller = #{controller,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="route != null">
        route = #{route,jdbcType=VARCHAR},
      </if>
      <if test="method != null">
        method = #{method,jdbcType=VARCHAR},
      </if>
      <if test="parameterIds != null">
        parameter_ids = #{parameterIds,jdbcType=VARCHAR},
      </if>
      <if test="body != null">
        body = #{body,jdbcType=BIGINT},
      </if>
      <if test="del != null">
        del = #{del,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.roy.springcloud.api.dao.model.ApiModel">
    update api
    set name = #{name,jdbcType=VARCHAR},
      controller = #{controller,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      route = #{route,jdbcType=VARCHAR},
      method = #{method,jdbcType=VARCHAR},
      parameter_ids = #{parameterIds,jdbcType=VARCHAR},
      body = #{body,jdbcType=BIGINT},
      del = #{del,jdbcType=BIT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>