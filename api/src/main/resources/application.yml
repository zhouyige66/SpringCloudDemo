server:
  port: ${server.port.api:8080}

spring:
  application:
    name: ${server.name.api:api}
  cloud:
    config:
      name: default,api
  #链路追踪
  zipkin:
    baseUrl: ${zipkin.url:http://localhost:9411}
  #服务追踪
  sleuth:
    traceId128: true
    sampler:
      probability: 1.0
  #热部署
#  devtools:
#    add-properties: false
#    restart:
#      #热部署生效
#      enabled: false
#      #设置重启的目录
#      #additional-paths: src/main/java
  freemarker:
    template-loader-path: classpath:/templates/freemarker/
    #关闭缓存，即时刷新，上线前要更改为true
    cache: true
  thymeleaf:
    check-template-location: true
    prefix: classpath:/templates/thymeleaf/
    #关闭缓存，即时刷新，上线前要更改为true
    cache: true
  #邮箱配置
  mail:
    host: 127.0.0.1
    port: 25
    protocol: smtp
    #配置发送者信息
    username:
    password:
    default-encoding: UTF-8
    properties:
      mail:
        mime:
          encodefilename: false
          charset: UTF-8
          splitlongparameters: false
        smtp:
          auth: true
          starttls:
            enable: false
            required: false
  #mq配置
  activemq:
    broker-url: tcp://127.0.0.1:61616
    user: admin
    password: admin
    pool:
      enabled: true
      max-connections: 50
      idle-timeout: 30000
      #expiry-timeout: 1000

#数据源
datasource:
  #主库
  master:
    url: jdbc:mysql://localhost:3306/cm_interface?useUnicode=true&characterEncoding=utf8&allowMultiQueries=true&useSSL=false
    username: root
    password: kk209257
    driver-class-name: com.mysql.cj.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource
    #下面为连接池的补充设置，应用到上面所有数据源中
    #初始化大小，最小，最大
    initialSize: 5
    minIdle: 5
    maxActive: 20
    #配置获取连接等待超时的时间
    maxWait: 60000
    #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    #配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 300000
    validationQuery: SELECT 1 FROM DUAL
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    #打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    #配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    spring.datasource.filters: stat,wall,log4j
    #通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    #合并多个DruidDataSource的监控数据
    #useGlobalDataSourceStat: true
  #从库
  slave:
    - url: jdbc:mysql://localhost:3306/cm_slave1?useUnicode=true&characterEncoding=utf8&allowMultiQueries=true&useSSL=false
      username: kk20
      password: Kk209257
      driver-class-name: com.mysql.cj.jdbc.Driver
      type: com.alibaba.druid.pool.DruidDataSource
      #下面为连接池的补充设置，应用到上面所有数据源中
      #初始化大小，最小，最大
      initialSize: 5
      minIdle: 5
      maxActive: 20
      #配置获取连接等待超时的时间
      maxWait: 60000
      #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      timeBetweenEvictionRunsMillis: 60000
      #配置一个连接在池中最小生存的时间，单位是毫秒
      minEvictableIdleTimeMillis: 300000
      validationQuery: SELECT 1 FROM DUAL
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      #打开PSCache，并且指定每个连接上PSCache的大小
      poolPreparedStatements: true
      maxPoolPreparedStatementPerConnectionSize: 20
      #配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      spring.datasource.filters: stat,wall,log4j
      #通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      #合并多个DruidDataSource的监控数据
      #useGlobalDataSourceStat: true
    - url: jdbc:mysql://localhost:3306/cm_slave2?useUnicode=true&characterEncoding=utf8&allowMultiQueries=true&useSSL=false
      username: kk20
      password: Kk209257
      driver-class-name: com.mysql.cj.jdbc.Driver
      type: com.alibaba.druid.pool.DruidDataSource
      #下面为连接池的补充设置，应用到上面所有数据源中
      #初始化大小，最小，最大
      initialSize: 5
      minIdle: 5
      maxActive: 20
      #配置获取连接等待超时的时间
      maxWait: 60000
      #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      timeBetweenEvictionRunsMillis: 60000
      #配置一个连接在池中最小生存的时间，单位是毫秒
      minEvictableIdleTimeMillis: 300000
      validationQuery: SELECT 1 FROM DUAL
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      #打开PSCache，并且指定每个连接上PSCache的大小
      poolPreparedStatements: true
      maxPoolPreparedStatementPerConnectionSize: 20
      #配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      spring.datasource.filters: stat,wall,log4j
      #通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      #合并多个DruidDataSource的监控数据
      #useGlobalDataSourceStat: true

mybatis:
  #Mapper.xml所在的位置
  mapper-locations: classpath:mapper/*.xml
  #Entity扫描的包名
  type-aliases-package: cn.roy.springcloud.api.dao.bean
  configuration:
    map-underscore-to-camel-case: true
    #sql输出
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

#开启熔断机制
feign:
  hystrix:
    # If true, an OpenFeign client will be wrapped with a Hystrix circuit breaker.
    enabled: true

#服务熔断
hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            #熔断超时时长：6000ms
            timeoutInMilliseconds: 6000

#负载均衡
ribbon:
  #连接超时时间(ms)
  ConnectTimeout: 1000
  #通信超时时间(ms)，解决504问题
  ReadTimeout: 5000
  #是否对所有操作重试
  OkToRetryOnAllOperations: true
  #同一服务不同实例的重试次数
  MaxAutoRetriesNextServer: 2
  #同一实例的重试次数
  MaxAutoRetries: 1

#健康监控：加载所有的端点/默认只加载了info/health
management:
  endpoints:
    web:
      exposure:
        include=*:

mail:
  #收件人之间逗号隔开，如xxx@qq.com,yyy@163.com
  sendTo: roy.z.zhou@163.com
  ccTo: kk.h@163.com

custom:
  names:
    - roy.z.zhou
    - kk20
    - yige